version: '3'

services:
  db-django:
    image: postgres
    volumes:
      - ./app/django/data/db-django:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_NAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - todo-net
    restart: always
  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    command: >
      sh -c "
        python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ./app/django:/code/django
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db-django
    networks:
      - todo-net
    restart: always
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5051:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.ru
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db-django
    networks:
      - todo-net
    restart: always
  db-telegram-bot:
    image: postgres:12-alpine
    volumes:
      - ./app/aiogram/data/db-telegram-bot:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_NAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - todo-net
    restart: always
  telegram-bot:
    build:
      context: .
      dockerfile: Dockerfile.aiogram
    command: "python bot/bot.py"
    volumes:
      - ./app/aiogram:/code/aiogram
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DB_URL=${DB_URL}
    depends_on:
      - db-telegram-bot
    networks:
      - todo-net
    restart: always

networks:
  todo-net:
    driver: bridge
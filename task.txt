Напишите Django-приложение для учета задач.

Level 1:
Основные требования:

1. Для задачи должны быть следующие поля:
- название задачи
- описание задачи
- дата создания задачи
- дата окончания задачи
- статус задачи (например, "в работе", "ожидает выполнения" и т.д.)

2. Список задач должен отображаться на главной странице. 
Список должен быть отсортирован по дате создания задачи, начиная с последних добавленных.

3. Для добавления задачи должна быть доступна ссылка на странице со списком задач.

4. На странице каждой задачи должны быть кнопки редактирования и удаления задачи.

5. При редактировании задачи пользователь должен иметь возможность изменить 
все поля задачи.

6. На странице каждой задачи должна отображаться дата создания, 
дата окончания и статус задачи.

7. Приложение должно иметь простой и интуитивно понятный интерфейс.

Дополнительные требования:

1. Приложение должно использовать Bootstrap для стилизации страниц.

2. Для работы с датами можно использовать любой пакет, 
который удобен для вас (например, datetime).

3. Пользователи должны иметь возможность регистрации и авторизации. 
Задачи должны быть привязаны к пользователям, которые их создали.

 4. Приложение должно иметь возможность отправлять уведомления пользователям о том,
 что их задачи близки к истечению срока выполнения. 

Результат выполнения задания:

 Выполненное задание должно быть размещено на GitHub в виде публичного репозитория.
 README-файл должен содержать инструкции по запуску приложения и список используемых пакетов.

 Level 2:
 
TODO 1. Добавить возможность прикреплять файлы к задачам. Например, пользователь 
может прикрепить файл с дополнительной информацией по задаче или с результатами 
выполнения задачи.
TODO a) разобраться с docker-compose, чтобы обновлялся при редактировании кода
    b) сделать множенсвенное добавление файлов
    с) редактировать все формы

TODO 2. Добавить возможность комментировать задачи. Например, пользователь может 
оставить комментарий с дополнительной информацией по задаче или с вопросами 
к другим пользователям.

TODO 3. Добавить возможность фильтровать задачи по различным критериям. 
Например, пользователь может отфильтровать задачи по статусу 
или по дате окончания задачи.

TODO 4. Добавить возможность просматривать задачи других пользователей. Например, 
пользователь может хотеть просмотреть задачи своих коллег или других 
пользователей в рамках своего проекта или организации.

TODO 5. Добавить возможность создавать проекты и привязывать задачи к проектам. 
Например, пользователь может создать проект для своей команды и привязать к 
нему задачи, связанные с этим проектом.

TODO 6. Добавить возможность установки приоритета задаче. Например, пользователь 
может установить высокий приоритет для задачи, которую нужно выполнить 
в первую очередь.

TODO 7. Добавить возможность создавать шаблоны задач. Например, пользователь может 
создать шаблон для типовой задачи, чтобы быстро создавать новые задачи 
на основе этого шаблона.

TODO 8. Создать 404 страницу и другие